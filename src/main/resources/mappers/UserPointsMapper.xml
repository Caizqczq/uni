<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unilife.mapper.UserPointsMapper">

    <resultMap id="UserPointsEntityResultMap" type="com.unilife.model.entity.UserPoints">
        <id property="id" column="up_id"/>
        <result property="userId" column="up_user_id"/>
        <result property="totalPoints" column="up_total_points"/>
        <result property="lastUpdatedAt" column="up_last_updated_at"/>
    </resultMap>

    <resultMap id="UserPointsDtoResultMap" type="com.unilife.model.dto.UserPointsDto">
        <result property="userId" column="up_user_id"/>
        <result property="username" column="u_username"/>
        <result property="totalPoints" column="up_total_points"/>
        <result property="lastUpdatedAt" column="up_last_updated_at"/>
    </resultMap>

    <select id="findByUserId" resultMap="UserPointsEntityResultMap">
        SELECT id as up_id, user_id as up_user_id, total_points as up_total_points, last_updated_at as up_last_updated_at
        FROM user_points
        WHERE user_id = #{userId}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_points (user_id, total_points, last_updated_at)
        VALUES (#{userId}, #{totalPoints}, #{lastUpdatedAt})
    </insert>

    <update id="updatePoints">
        UPDATE user_points
        SET total_points = total_points + #{pointsDelta},
            last_updated_at = NOW() <!-- Or pass LocalDateTime from service -->
        WHERE user_id = #{userId}
    </update>

    <!-- Alternative for updatePoints if need to handle lastUpdatedAt from service -->
    <!--
    <update id="updatePointsWithTime">
        UPDATE user_points
        SET total_points = total_points + #{pointsDelta},
            last_updated_at = #{lastUpdatedAt}
        WHERE user_id = #{userId}
    </update>
    -->

    <select id="findLeaderboard" resultMap="UserPointsDtoResultMap">
        SELECT
            up.user_id as up_user_id,
            u.username as u_username, <!-- Assuming 'users' table has 'username' -->
            up.total_points as up_total_points,
            up.last_updated_at as up_last_updated_at
        FROM user_points up
        JOIN users u ON up.user_id = u.id
        ORDER BY up.total_points DESC
        LIMIT #{limit}
    </select>

</mapper>
